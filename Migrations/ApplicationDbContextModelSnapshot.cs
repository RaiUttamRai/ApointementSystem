// <auto-generated />
using System;
using ApointementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApointementSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApointementSystem.Models.ApointmentModel.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"), 1L, 1);

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisitorId")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId");

                    b.HasIndex("OfficerId");

                    b.HasIndex("VisitorId");

                    b.ToTable("appointments");
                });

            modelBuilder.Entity("ApointementSystem.Models.OfficerModel.Officer", b =>
                {
                    b.Property<int>("OfficerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficerId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("WorkEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkStartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("OfficerId");

                    b.HasIndex("PostId");

                    b.ToTable("officers");
                });

            modelBuilder.Entity("ApointementSystem.Models.PostModel.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PostId");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("ApointementSystem.Models.VisitorModel.Visitor", b =>
                {
                    b.Property<int>("VisitorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitorId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("VisitorId");

                    b.ToTable("visitors");
                });

            modelBuilder.Entity("ApointementSystem.Models.WorkdayModel.WorkDay", b =>
                {
                    b.Property<int>("WorkDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkDayId"), 1L, 1);

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("OfficerId")
                        .HasColumnType("int");

                    b.HasKey("WorkDayId");

                    b.HasIndex("OfficerId");

                    b.ToTable("workDays");
                });

            modelBuilder.Entity("ApointementSystem.Models.ApointmentModel.Appointment", b =>
                {
                    b.HasOne("ApointementSystem.Models.OfficerModel.Officer", "Officer")
                        .WithMany("Appointments")
                        .HasForeignKey("OfficerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApointementSystem.Models.VisitorModel.Visitor", "Visitor")
                        .WithMany("Appointments")
                        .HasForeignKey("VisitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Officer");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("ApointementSystem.Models.OfficerModel.Officer", b =>
                {
                    b.HasOne("ApointementSystem.Models.PostModel.Post", "Post")
                        .WithMany("Officers")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("ApointementSystem.Models.WorkdayModel.WorkDay", b =>
                {
                    b.HasOne("ApointementSystem.Models.OfficerModel.Officer", "Officer")
                        .WithMany("WorkDays")
                        .HasForeignKey("OfficerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Officer");
                });

            modelBuilder.Entity("ApointementSystem.Models.OfficerModel.Officer", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("WorkDays");
                });

            modelBuilder.Entity("ApointementSystem.Models.PostModel.Post", b =>
                {
                    b.Navigation("Officers");
                });

            modelBuilder.Entity("ApointementSystem.Models.VisitorModel.Visitor", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
